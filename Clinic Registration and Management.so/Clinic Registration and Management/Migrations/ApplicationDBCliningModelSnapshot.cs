// <auto-generated />
using System;
using Clinic_Registration_and_Management.ApplicationDBclinicDb;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Clinic_Registration_and_Management.Migrations
{
    [DbContext(typeof(ApplicationDBClining))]
    partial class ApplicationDBCliningModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Clinic_Registration_and_Management.Model.a_medical_specialization", b =>
                {
                    b.Property<int>("SpecializationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SpecializationID"), 1L, 1);

                    b.Property<string>("Detiles")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpecializationName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("SpecializationID");

                    b.ToTable("specializations");
                });

            modelBuilder.Entity("Clinic_Registration_and_Management.Model.book_appointments", b =>
                {
                    b.Property<int>("AppointmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AppointmentID"), 1L, 1);

                    b.Property<string>("Appointment_Date")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Appointment_Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Appointment_Time")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Idcard")
                        .HasColumnType("int");

                    b.Property<int>("PatientIdcard")
                        .HasColumnType("int");

                    b.Property<int?>("SpecializationID")
                        .HasColumnType("int");

                    b.HasKey("AppointmentID");

                    b.HasIndex("PatientIdcard");

                    b.HasIndex("SpecializationID");

                    b.ToTable("book_appointments");
                });

            modelBuilder.Entity("Clinic_Registration_and_Management.Model.patients", b =>
                {
                    b.Property<int>("Idcard")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idcard"), 1L, 1);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long>("PhoneNumber")
                        .HasColumnType("bigint");

                    b.HasKey("Idcard");

                    b.ToTable("Patient");
                });

            modelBuilder.Entity("Clinic_Registration_and_Management.Model.book_appointments", b =>
                {
                    b.HasOne("Clinic_Registration_and_Management.Model.patients", "Patient")
                        .WithMany()
                        .HasForeignKey("PatientIdcard")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Clinic_Registration_and_Management.Model.a_medical_specialization", "Specialization")
                        .WithMany()
                        .HasForeignKey("SpecializationID");

                    b.Navigation("Patient");

                    b.Navigation("Specialization");
                });
#pragma warning restore 612, 618
        }
    }
}
